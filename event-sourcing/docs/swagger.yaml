definitions:
  dto.CancelOrderReqDto:
    properties:
      cancelReason:
        type: string
    required:
    - cancelReason
    type: object
  dto.ChangeDeliveryAddressReqDto:
    properties:
      deliveryAddress:
        type: string
    required:
    - deliveryAddress
    type: object
  dto.CreateOrderReqDto:
    properties:
      accountEmail:
        type: string
      deliveryAddress:
        type: string
      shopItems:
        items:
          $ref: '#/definitions/models.ShopItem'
        type: array
    required:
    - accountEmail
    - deliveryAddress
    - shopItems
    type: object
  dto.OrderResponseDto:
    properties:
      accountEmail:
        type: string
      cancelReason:
        type: string
      canceled:
        type: boolean
      completed:
        type: boolean
      created:
        type: boolean
      deliveredTime:
        type: string
      deliveryAddress:
        type: string
      id:
        type: string
      orderId:
        type: string
      paid:
        type: boolean
      payment:
        $ref: '#/definitions/dto.Payment'
      shopItems:
        items:
          $ref: '#/definitions/dto.ShopItem'
        type: array
      submitted:
        type: boolean
      totalPrice:
        type: number
    required:
    - accountEmail
    type: object
  dto.OrderSearchResponseDto:
    properties:
      orders:
        items:
          $ref: '#/definitions/dto.OrderResponseDto'
        type: array
      pagination:
        $ref: '#/definitions/dto.Pagination'
    type: object
  dto.Pagination:
    properties:
      hasMore:
        type: boolean
      page:
        type: integer
      size:
        type: integer
      totalCount:
        type: integer
      totalPages:
        type: integer
    type: object
  dto.Payment:
    properties:
      paymentID:
        type: string
      timestamp:
        type: string
    required:
    - paymentID
    - timestamp
    type: object
  dto.ShopItem:
    properties:
      description:
        type: string
      id:
        type: string
      price:
        type: number
      quantity:
        type: integer
      title:
        type: string
    type: object
  dto.UpdateShoppingItemsReqDto:
    properties:
      shopItems:
        items:
          $ref: '#/definitions/models.ShopItem'
        type: array
    required:
    - shopItems
    type: object
  models.ShopItem:
    properties:
      description:
        type: string
      id:
        type: string
      price:
        type: number
      quantity:
        type: integer
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /orders:
    post:
      consumes:
      - application/json
      description: Create new order
      parameters:
      - description: create order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.CreateOrderReqDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      summary: Create order
      tags:
      - Orders
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Get order by id
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderResponseDto'
      summary: Get order
      tags:
      - Orders
  /orders/address/{id}:
    put:
      consumes:
      - application/json
      description: Deliver existing order
      parameters:
      - description: change delivery address
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.ChangeDeliveryAddressReqDto'
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Change delivery address order
      tags:
      - Orders
  /orders/cancel/{id}:
    post:
      consumes:
      - application/json
      description: Cancel existing order
      parameters:
      - description: cancel order reason
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.CancelOrderReqDto'
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Cancel order
      tags:
      - Orders
  /orders/cart/{id}:
    put:
      consumes:
      - application/json
      description: Update existing order shopping cart
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      - description: update order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateShoppingItemsReqDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update order shopping cart
      tags:
      - Orders
  /orders/complete/{id}:
    post:
      consumes:
      - application/json
      description: Complete existing order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Complete order
      tags:
      - Orders
  /orders/pay/{id}:
    put:
      consumes:
      - application/json
      description: Pay existing order
      parameters:
      - description: create order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/dto.Payment'
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Pay order
      tags:
      - Orders
  /orders/search:
    get:
      consumes:
      - application/json
      description: Full text search by title and description
      parameters:
      - description: search text
        in: query
        name: search
        type: string
      - description: page number
        in: query
        name: page
        type: string
      - description: number of elements
        in: query
        name: size
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderSearchResponseDto'
      summary: Search orders
      tags:
      - Orders
  /orders/submit/{id}:
    put:
      consumes:
      - application/json
      description: Submit existing order
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Submit order
      tags:
      - Orders
swagger: "2.0"
